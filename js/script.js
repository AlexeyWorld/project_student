'use strict';

document.addEventListener("DOMContentLoaded", () => {
    console.log('–°–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–µ–ª–æ–∞–¥–µ—Ä–∞
    const initPreloader = () => {
        const preloader = document.getElementById('preloader');
        const content = document.getElementById('content');
        
        if (!preloader || !content) return;
        
        preloader.style.display = 'flex';
        
        setTimeout(() => {
            preloader.classList.add('fade-out');
            content.classList.add('show');
            
            setTimeout(() => {
                preloader.style.display = 'none';
            }, 500);
        }, 1500);
    };

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø–æ–¥–ø–∏—Å—å—é
    const initImageCaption = () => {
        const imageWrapper = document.querySelector('.about__image-wrapper');
        const imageCaption = document.querySelector('.image-caption');
        
        if (!imageWrapper || !imageCaption) return;
        
        const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;
        
        if (isTouchDevice) {
            imageWrapper.addEventListener('click', (e) => {
                e.preventDefault();
                const isVisible = imageCaption.style.opacity === '1';
                imageCaption.style.opacity = isVisible ? '0' : '1';
                imageCaption.style.visibility = isVisible ? 'hidden' : 'visible';
            });
            
            document.addEventListener('click', (e) => {
                if (!imageWrapper.contains(e.target)) {
                    imageCaption.style.opacity = '0';
                    imageCaption.style.visibility = 'hidden';
                }
            });
        } else {
            imageWrapper.addEventListener('mouseenter', () => {
                imageCaption.style.opacity = '1';
                imageCaption.style.visibility = 'visible';
            });
            
            imageWrapper.addEventListener('mouseleave', () => {
                imageCaption.style.opacity = '0';
                imageCaption.style.visibility = 'hidden';
            });
        }
    };

    // –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é
    const initNavigationMenu = () => {
        const sectionTitles = Array.from(document.querySelectorAll('section[id] h2.title')).map(title => ({
            text: title.textContent,
            id: title.closest('section').id
        }));

        if (sectionTitles.length === 0) return;

        const navContainer = document.createElement('div');
        navContainer.className = 'headings-nav';
        navContainer.innerHTML = `
            <h3 class="nav-title">–ë—ã—Å—Ç—Ä–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è</h3>
            <ul class="nav-list">
                ${sectionTitles.map(item => `
                    <li class="nav-item">
                        <a href="#${item.id}" class="nav-link">${item.text}</a>
                    </li>
                `).join('')}
            </ul>
        `;
        
        document.body.appendChild(navContainer);
        
        const style = document.createElement('style');
        style.textContent = `
            .headings-nav {
                position: fixed;
                top: 100px;
                right: 20px;
                background: white;
                padding: 15px;
                border-radius: 8px;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                max-width: 250px;
                z-index: 100;
            }
            .nav-title {
                margin-top: 0;
                color: #2c3e50;
                font-size: 1.2rem;
            }
            .nav-list {
                list-style: none;
                padding: 0;
                margin: 0;
            }
            .nav-item {
                margin-bottom: 8px;
            }
            .nav-link {
                color: #3498db;
                text-decoration: none;
                transition: color 0.3s;
            }
            .nav-link:hover {
                color: #2980b9;
            }
        `;
        document.head.appendChild(style);
    };

    // –û—Å–Ω–æ–≤–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
    const initMainNavigation = () => {
        const navItems = [
            { text: "–ì–ª–∞–≤–Ω–∞—è", href: "#" },
            { text: "–û–±–æ –º–Ω–µ", href: "#about" },
            { text: "–ö—É—Ä—Å—ã", href: "#courses" },
            { text: "–ú–∞—Ç–µ—Ä–∏–∞–ª—ã", href: "#materials" },
            { text: "–ö–æ–Ω—Ç–∞–∫—Ç—ã", href: "#contacts" }
        ];

        const navContainer = document.getElementById('mainNavigation');
        if (!navContainer) return;

        navItems.forEach(item => {
            const navItem = document.createElement('li');
            navItem.className = 'nav-item';
            navItem.innerHTML = `<a href="${item.href}" class="nav-link">${item.text}</a>`;
            navContainer.appendChild(navItem);
        });

        // –ü–ª–∞–≤–Ω—ã–π —Å–∫—Ä–æ–ª–ª
        navContainer.addEventListener('click', (e) => {
            if (e.target.classList.contains('nav-link')) {
                e.preventDefault();
                const targetId = e.target.getAttribute('href');
                if (targetId !== '#') {
                    document.querySelector(targetId).scrollIntoView({
                        behavior: 'smooth'
                    });
                }
            }
        });
    };

    // –ö–Ω–æ–ø–∫–∞ —Å–∫—Ä–æ–ª–ª–∞ –≤–≤–µ—Ä—Ö
    const initScrollButton = () => {
        const scrollBtn = document.createElement('button');
        scrollBtn.className = 'scroll-top';
        scrollBtn.innerHTML = '‚Üë';
        scrollBtn.title = '–ù–∞–≤–µ—Ä—Ö';
        document.body.appendChild(scrollBtn);
        
        const style = document.createElement('style');
        style.textContent = `
            .scroll-top {
                display: none;
                position: fixed;
                bottom: 30px;
                right: 30px;
                width: 50px;
                height: 50px;
                border-radius: 50%;
                background-color: #3498db;
                color: white;
                border: none;
                cursor: pointer;
                font-size: 20px;
                z-index: 99;
                transition: background-color 0.3s;
            }
            .scroll-top:hover {
                background-color: #2980b9;
            }
        `;
        document.head.appendChild(style);
        
        window.addEventListener('scroll', () => {
            scrollBtn.style.display = window.pageYOffset > 300 ? 'block' : 'none';
        });
        
        scrollBtn.addEventListener('click', () => {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        });
    };

    // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    const loadDynamicContent = () => {
        // –ö—É—Ä—Å—ã
        const coursesData = [
            {
                icon: "üìú",
                title: "–í—Å–µ–º–∏—Ä–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è",
                description: "–û—Å–Ω–æ–≤–Ω—ã–µ —ç–ø–æ—Ö–∏ –∏ –∫–ª—é—á–µ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –º–∏—Ä–æ–≤–æ–π –∏—Å—Ç–æ—Ä–∏–∏. –î–ª—è —É—á–∞—â–∏—Ö—Å—è 5-9 –∫–ª–∞—Å—Å–æ–≤.",
                buttonText: "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
            },
            {
                icon: "üèõÔ∏è",
                title: "–ò—Å—Ç–æ—Ä–∏—è –†–æ—Å—Å–∏–∏",
                description: "–û—Ç –¥—Ä–µ–≤–Ω–æ—Å—Ç–∏ –¥–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏. –î–ª—è —É—á–∞—â–∏—Ö—Å—è 6-11 –∫–ª–∞—Å—Å–æ–≤.",
                buttonText: "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
            },
            {
                icon: "‚úçÔ∏è",
                title: "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ï–ì–≠/–û–ì–≠",
                description: "–†–∞–∑–±–æ—Ä –∑–∞–¥–∞–Ω–∏–π, —Ç–µ—Å—Ç—ã –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.",
                buttonText: "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
            }
        ];

        const coursesGrid = document.querySelector('.courses__grid');
        if (coursesGrid) {
            coursesGrid.innerHTML = coursesData.map(course => `
                <article class="course-card">
                    <div class="course-card__icon">${course.icon}</div>
                    <h3 class="course-card__title">${course.title}</h3>
                    <p class="course-card__description">${course.description}</p>
                    <a href="#" class="course-card__button button button_theme_primary">${course.buttonText}</a>
                </article>
            `).join('');
        }

        // –ú–∞—Ç–µ—Ä–∏–∞–ª—ã
        const materialsData = [
            { name: "–ö–æ–Ω—Å–ø–µ–∫—Ç –ø–æ –î—Ä–µ–≤–Ω–µ–º—É –º–∏—Ä—É (PDF)" },
            { name: "–¢–∞–±–ª–∏—Ü–∞ –ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π –†–æ—Å—Å–∏–∏ (XLSX)" },
            { name: "–•—Ä–æ–Ω–æ–ª–æ–≥–∏—è –í—Ç–æ—Ä–æ–π –º–∏—Ä–æ–≤–æ–π –≤–æ–π–Ω—ã (PDF)" }
        ];

        const materialsList = document.querySelector('.materials__list');
        if (materialsList) {
            materialsList.innerHTML = materialsData.map(material => `
                <li class="materials__item">
                    <a href="#" class="materials__link">${material.name}</a>
                </li>
            `).join('');
        }

        // –û–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
        const learningMaterialsData = [
            {
                badge: "5 –∫–ª–∞—Å—Å",
                title: "–î—Ä–µ–≤–Ω–∏–π –º–∏—Ä",
                description: "–ö–æ–Ω—Å–ø–µ–∫—Ç—ã, –∫–∞—Ä—Ç—ã –∏ —Ç–µ—Å—Ç—ã –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –î—Ä–µ–≤–Ω–µ–≥–æ –ï–≥–∏–ø—Ç–∞, –ì—Ä–µ—Ü–∏–∏ –∏ –†–∏–º–∞.",
                buttonText: "–°–∫–∞—á–∞—Ç—å"
            },
            {
                badge: "6 –∫–ª–∞—Å—Å",
                title: "–°—Ä–µ–¥–Ω–∏–µ –≤–µ–∫–∞",
                description: "–¢–∞–±–ª–∏—Ü—ã —Ñ–µ–æ–¥–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã, –∫—Ä–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Ö–æ–¥—ã, –í–æ–∑—Ä–æ–∂–¥–µ–Ω–∏–µ.",
                buttonText: "–°–∫–∞—á–∞—Ç—å"
            },
            {
                badge: "7 –∫–ª–∞—Å—Å",
                title: "–ù–æ–≤–æ–µ –≤—Ä–µ–º—è",
                description: "–í–µ–ª–∏–∫–∏–µ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –æ—Ç–∫—Ä—ã—Ç–∏—è, —Ä–µ—Ñ–æ—Ä–º–∞—Ü–∏—è, –∞–±—Å–æ–ª—é—Ç–∏–∑–º.",
                buttonText: "–°–∫–∞—á–∞—Ç—å"
            }
        ];

        const learningMaterialsGrid = document.querySelector('.learning-materials__grid');
        if (learningMaterialsGrid) {
            learningMaterialsGrid.innerHTML = learningMaterialsData.map(material => `
                <article class="material-card">
                    <span class="material-card__badge">${material.badge}</span>
                    <h3 class="material-card__title">${material.title}</h3>
                    <p class="material-card__description">${material.description}</p>
                    <a href="#" class="material-card__button button button_theme_primary">${material.buttonText}</a>
                </article>
            `).join('');
        }
    };

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏–∑ JSON
    const initGallery = async () => {
        try {
            const response = await fetch('images.json');
            if (!response.ok) {
                throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≥–∞–ª–µ—Ä–µ—é');
            }
            const galleryData = await response.json();
            renderGallery(galleryData);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–∞–ª–µ—Ä–µ–∏:', error);
            const galleryGrid = document.getElementById('galleryGrid');
            if (galleryGrid) {
                galleryGrid.innerHTML = '<p class="error-message">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≥–∞–ª–µ—Ä–µ—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</p>';
            }
        }
    };

    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≥–∞–ª–µ—Ä–µ–∏
    const renderGallery = (images) => {
        const galleryGrid = document.getElementById('galleryGrid');
        if (!galleryGrid || !images) return;

        galleryGrid.innerHTML = images.map(image => `
            <div class="gallery__item">
                <img src="${image.src}" alt="${image.alt}" class="gallery__image">
                <div class="gallery__caption">${image.caption}</div>
            </div>
        `).join('');
    };

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    initPreloader();
    initImageCaption();
    initNavigationMenu();
    initMainNavigation();
    initScrollButton();
    loadDynamicContent();
    initGallery();
});