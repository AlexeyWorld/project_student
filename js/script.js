'use strict';

document.addEventListener("DOMContentLoaded", () => {
    console.log('–°–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∂–µ–Ω');
    
    // –ö–ª—é—á–∏ –¥–ª—è LocalStorage
    const STORAGE_KEYS = {
        GALLERY_LAST_VIEWED: 'gallery_last_viewed',
        GALLERY_LAST_VIEWED_INDEX: 'gallery_last_viewed_index',
        DARK_MODE: 'dark_mode',
        FONT_SIZE: 'font_size'
    };

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–µ–ª–æ–∞–¥–µ—Ä–∞
    const initPreloader = () => {
        const preloader = document.querySelector('.preloader');
        if (!preloader) return;
        
        const hidePreloader = () => {
            preloader.classList.add('preloader--hidden');
            
            preloader.addEventListener('transitionend', function() {
                this.remove();
            }, { once: true });
        };

        // –ï—Å–ª–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞, —Å–∫—Ä—ã–≤–∞–µ–º –ø—Ä–µ–ª–æ–∞–¥–µ—Ä —Å—Ä–∞–∑—É
        if (document.readyState === 'complete') {
            hidePreloader();
        } else {
            window.addEventListener('load', hidePreloader);
        }
    };

    // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ LocalStorage
    const saveToStorage = (key, value) => {
        try {
            localStorage.setItem(key, JSON.stringify(value));
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ LocalStorage:', e);
        }
    };

    // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ LocalStorage
    const getFromStorage = (key, defaultValue = null) => {
        try {
            const value = localStorage.getItem(key);
            return value ? JSON.parse(value) : defaultValue;
        } catch (e) {
            console.error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∏–∑ LocalStorage:', e);
            return defaultValue;
        }
    };

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –ø–æ–¥–ø–∏—Å—å—é
    const initImageCaption = () => {
        const imageWrapper = document.querySelector('.about__image-wrapper');
        const imageCaption = document.querySelector('.image-caption');
        
        if (!imageWrapper || !imageCaption) return;
        
        const toggleCaption = (show) => {
            imageCaption.style.opacity = show ? '1' : '0';
            imageCaption.style.visibility = show ? 'visible' : 'hidden';
        };
        
        const isTouchDevice = 'ontouchstart' in window || navigator.maxTouchPoints > 0;
        
        if (isTouchDevice) {
            let clickTimer;
            
            imageWrapper.addEventListener('click', (e) => {
                e.preventDefault();
                clearTimeout(clickTimer);
                
                const isVisible = imageCaption.style.opacity === '1';
                toggleCaption(!isVisible);
            });
            
            document.addEventListener('click', (e) => {
                if (!imageWrapper.contains(e.target)) {
                    toggleCaption(false);
                }
            });
        } else {
            imageWrapper.addEventListener('mouseenter', () => toggleCaption(true));
            imageWrapper.addEventListener('mouseleave', () => toggleCaption(false));
        }
    };

    // –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω–æ–µ –º–µ–Ω—é
    const initNavigationMenu = () => {
        const sectionTitles = Array.from(document.querySelectorAll('section[id] h2.title'))
            .filter(title => title.closest('section'))
            .map(title => ({
                text: title.textContent.trim(),
                id: title.closest('section').id
            }));

        if (sectionTitles.length === 0) return;

        const navContainer = document.createElement('div');
        navContainer.className = 'headings-nav';
        navContainer.innerHTML = `
            <h3 class="nav-title">–ë—ã—Å—Ç—Ä–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è</h3>
            <ul class="nav-list">
                ${sectionTitles.map(item => `
                    <li class="nav-item">
                        <a href="#${item.id}" class="nav-link">${item.text}</a>
                    </li>
                `).join('')}
            </ul>
        `;
        
        document.body.appendChild(navContainer);
    };

    // –û—Å–Ω–æ–≤–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è
    const initMainNavigation = () => {
        const navItems = [
            { text: "–ì–ª–∞–≤–Ω–∞—è", href: "#" },
            { text: "–û–±–æ –º–Ω–µ", href: "#about" },
            { text: "–ö—É—Ä—Å—ã", href: "#courses" },
            { text: "–ú–∞—Ç–µ—Ä–∏–∞–ª—ã", href: "#materials" },
            { text: "–ö–æ–Ω—Ç–∞–∫—Ç—ã", href: "#contacts" }
        ];

        const navContainer = document.getElementById('mainNavigation');
        if (!navContainer) return;

        navContainer.innerHTML = navItems.map(item => `
            <li class="nav-item">
                <a href="${item.href}" class="nav-link">${item.text}</a>
            </li>
        `).join('');

        navContainer.addEventListener('click', (e) => {
            if (e.target.classList.contains('nav-link')) {
                e.preventDefault();
                const targetId = e.target.getAttribute('href');
                if (targetId !== '#') {
                    const targetElement = document.querySelector(targetId);
                    if (targetElement) {
                        targetElement.scrollIntoView({
                            behavior: 'smooth'
                        });
                    }
                }
            }
        });
    };

    // –ö–Ω–æ–ø–∫–∞ —Å–∫—Ä–æ–ª–ª–∞ –≤–≤–µ—Ä—Ö
    const initScrollButton = () => {
        const scrollBtn = document.createElement('button');
        scrollBtn.className = 'scroll-top';
        scrollBtn.innerHTML = '‚Üë';
        scrollBtn.title = '–ù–∞–≤–µ—Ä—Ö';
        scrollBtn.setAttribute('aria-label', '–ù–∞–≤–µ—Ä—Ö');
        document.body.appendChild(scrollBtn);
        
        const handleScroll = () => {
            scrollBtn.style.display = window.pageYOffset > 300 ? 'block' : 'none';
        };
        
        const scrollToTop = () => {
            window.scrollTo({
                top: 0,
                behavior: 'smooth'
            });
        };
        
        window.addEventListener('scroll', handleScroll);
        scrollBtn.addEventListener('click', scrollToTop);
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        handleScroll();
    };

    // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    const loadDynamicContent = () => {
        const coursesData = [
            {
                icon: "üìú",
                title: "–í—Å–µ–º–∏—Ä–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è",
                description: "–û—Å–Ω–æ–≤–Ω—ã–µ —ç–ø–æ—Ö–∏ –∏ –∫–ª—é—á–µ–≤—ã–µ —Å–æ–±—ã—Ç–∏—è –º–∏—Ä–æ–≤–æ–π –∏—Å—Ç–æ—Ä–∏–∏. –î–ª—è —É—á–∞—â–∏—Ö—Å—è 5-9 –∫–ª–∞—Å—Å–æ–≤.",
                buttonText: "–ü–æ–¥—Ä–æ–±–Ω–µ–µ",
                files: [
                    { name: "–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞.pdf", path: "courses/world-history/program.pdf" },
                    { name: "–ö–æ–Ω—Å–ø–µ–∫—Ç –ª–µ–∫—Ü–∏–π.zip", path: "courses/world-history/lectures.zip" },
                    { name: "–¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è.docx", path: "courses/world-history/tests.docx" }
                ],
                details: `
                    <div class="course-details">
                        <h4>–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∫—É—Ä—Å–∞:</h4>
                        <ul>
                            <li>–î—Ä–µ–≤–Ω–∏–π –º–∏—Ä</li>
                            <li>–°—Ä–µ–¥–Ω–∏–µ –≤–µ–∫–∞</li>
                            <li>–ù–æ–≤–æ–µ –≤—Ä–µ–º—è</li>
                            <li>–ù–æ–≤–µ–π—à–∞—è –∏—Å—Ç–æ—Ä–∏—è</li>
                        </ul>
                        <div class="course-files">
                            <h4>–§–∞–π–ª—ã –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:</h4>
                            <ul>
                                <li><a href="courses/world-history/program.pdf" download="–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞.pdf">–ü—Ä–æ–≥—Ä–∞–º–º–∞ –∫—É—Ä—Å–∞ (PDF)</a></li>
                                <li><a href="courses/world-history/lectures.zip" download="–ö–æ–Ω—Å–ø–µ–∫—Ç –ª–µ–∫—Ü–∏–π.zip">–ö–æ–Ω—Å–ø–µ–∫—Ç –ª–µ–∫—Ü–∏–π (ZIP)</a></li>
                                <li><a href="courses/world-history/tests.docx" download="–¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è.docx">–¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è (DOCX)</a></li>
                            </ul>
                        </div>
                    </div>
                `
            
            },
            {
                icon: "üèõÔ∏è",
                title: "–ò—Å—Ç–æ—Ä–∏—è –†–æ—Å—Å–∏–∏",
                description: "–û—Ç –¥—Ä–µ–≤–Ω–æ—Å—Ç–∏ –¥–æ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ—Å—Ç–∏. –î–ª—è —É—á–∞—â–∏—Ö—Å—è 6-11 –∫–ª–∞—Å—Å–æ–≤.",
                buttonText: "–ü–æ–¥—Ä–æ–±–Ω–µ–µ",
                files: [
                    { name: "–•—Ä–æ–Ω–æ–ª–æ–≥–∏—è.pdf", path: "/courses/russian-history/timeline.pdf" },
                    { name: "–ö–∞—Ä—Ç—ã.zip", path: "/courses/russian-history/maps.zip" },
                    { name: "–ë–∏–æ–≥—Ä–∞—Ñ–∏–∏.docx", path: "/courses/russian-history/biographies.docx" }
                ],
                details: `
                    <div class="course-details">
                        <h4>–û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ–º—ã:</h4>
                        <ul>
                            <li>–ö–∏–µ–≤—Å–∫–∞—è –†—É—Å—å</li>
                            <li>–ú–æ—Å–∫–æ–≤—Å–∫–æ–µ —Ü–∞—Ä—Å—Ç–≤–æ</li>
                            <li>–†–æ—Å—Å–∏–π—Å–∫–∞—è –∏–º–ø–µ—Ä–∏—è</li>
                            <li>–°–æ–≤–µ—Ç—Å–∫–∏–π –ø–µ—Ä–∏–æ–¥</li>
                        </ul>
                        <div class="course-files">
                            <h4>–§–∞–π–ª—ã –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:</h4>
                            <ul>
                                <li><a href="courses/russian-history/timeline.pdf" download>–•—Ä–æ–Ω–æ–ª–æ–≥–∏—è (PDF)</a></li>
                                <li><a href="courses/russian-history/maps.zip" download>–ö–∞—Ä—Ç—ã (ZIP)</a></li>
                                <li><a href="courses/russian-history/biographies.docx" download>–ë–∏–æ–≥—Ä–∞—Ñ–∏–∏ (DOCX)</a></li>
                            </ul>
                        </div>
                    </div>
                `
            },
            {
                icon: "‚úçÔ∏è",
                title: "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –ï–ì–≠/–û–ì–≠",
                description: "–†–∞–∑–±–æ—Ä –∑–∞–¥–∞–Ω–∏–π, —Ç–µ—Å—Ç—ã –∏ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.",
                buttonText: "–ü–æ–¥—Ä–æ–±–Ω–µ–µ",
                files: [
                    { name: "–¢–∏–ø–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è.pdf", path: "/courses/exam-prep/tasks.pdf" },
                    { name: "–ú–µ—Ç–æ–¥–∏—á–∫–∞.zip", path: "/courses/exam-prep/methods.zip" },
                    { name: "–ü—Ä–∏–º–µ—Ä—ã —Å–æ—á–∏–Ω–µ–Ω–∏–π.docx", path: "/courses/exam-prep/essays.docx" }
                ],
                details: `
                    <div class="course-details">
                        <h4>–í–∫–ª—é—á–∞–µ—Ç:</h4>
                        <ul>
                            <li>–†–∞–∑–±–æ—Ä –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –∑–∞–¥–∞–Ω–∏–π</li>
                            <li>–ú–µ—Ç–æ–¥–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏</li>
                            <li>–ü—Ä–∏–º–µ—Ä—ã –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö —Å–æ—á–∏–Ω–µ–Ω–∏–π</li>
                            <li>–ü—Ä–æ–±–Ω—ã–µ —Ç–µ—Å—Ç—ã</li>
                        </ul>
                        <div class="course-files">
                            <h4>–§–∞–π–ª—ã –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è:</h4>
                            <ul>
                                <li><a href="courses/exam-prep/tasks.pdf" download>–¢–∏–ø–æ–≤—ã–µ –∑–∞–¥–∞–Ω–∏—è (PDF)</a></li>
                                <li><a href="courses/exam-prep/methods.zip" download>–ú–µ—Ç–æ–¥–∏—á–∫–∞ (ZIP)</a></li>
                                <li><a href="courses/exam-prep/essays.docx" download>–ü—Ä–∏–º–µ—Ä—ã —Å–æ—á–∏–Ω–µ–Ω–∏–π (DOCX)</a></li>
                            </ul>
                        </div>
                    </div>
                `
            }
        ];

        const coursesGrid = document.querySelector('.courses__grid');
    if (coursesGrid) {
        coursesGrid.innerHTML = coursesData.map(course => `
            <article class="course-card">
                <div class="course-card__icon" aria-hidden="true">${course.icon}</div>
                <h3 class="course-card__title">${course.title}</h3>
                <p class="course-card__description">${course.description}</p>
                <button class="course-card__button button button_theme_primary" data-course-id="${course.title.replace(/\s+/g, '-').toLowerCase()}">
                    ${course.buttonText}
                </button>
                <div class="course-files-modal" id="modal-${course.title.replace(/\s+/g, '-').toLowerCase()}" hidden>
                    <div class="modal-content">
                        <span class="close-modal">&times;</span>
                        ${course.details}
                    </div>
                </div>
            </article>
        `).join('');

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ "–ü–æ–¥—Ä–æ–±–Ω–µ–µ"
        document.querySelectorAll('.course-card__button').forEach(button => {
            button.addEventListener('click', function() {
                const courseId = this.getAttribute('data-course-id');
                const modal = document.getElementById(`modal-${courseId}`);
                modal.hidden = false;
                
                // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
                modal.querySelector('.close-modal').addEventListener('click', () => {
                    modal.hidden = true;
                });
            });
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —Å—Å—ã–ª–æ–∫ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
        document.addEventListener('click', function(e) {
            if (e.target.matches('.course-files a[download]')) {
                e.preventDefault();
                const link = e.target;
                const fileUrl = link.getAttribute('href');
                const fileName = link.getAttribute('download');
                
                // –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                const a = document.createElement('a');
                a.href = fileUrl;
                a.download = fileName;
                document.body.appendChild(a);
                a.click();
                document.body.removeChild(a);
                
                // –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
                console.log(`–ü–æ–ø—ã—Ç–∫–∞ —Å–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª: ${fileUrl}`);
            }
        });
    
        }

        const materialsData = [
            { name: "–ö–æ–Ω—Å–ø–µ–∫—Ç –ø–æ –î—Ä–µ–≤–Ω–µ–º—É –º–∏—Ä—É (PDF)", path: "materials/ancient-world.pdf" },
            { name: "–¢–∞–±–ª–∏—Ü–∞ –ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π –†–æ—Å—Å–∏–∏ (XLSX)", path: "materials/russian-rulers.xlsx" },
            { name: "–•—Ä–æ–Ω–æ–ª–æ–≥–∏—è –í—Ç–æ—Ä–æ–π –º–∏—Ä–æ–≤–æ–π –≤–æ–π–Ω—ã (PDF)", path: "materials/ww2-timeline.pdf" }
        ];

        const materialsList = document.querySelector('.materials__list');
        if (materialsList) {
            materialsList.innerHTML = materialsData.map(material => `
                <li class="materials__item">
                    <a href="${material.path}" download class="materials__link">${material.name}</a>
                </li>
            `).join('');
        }

        const learningMaterialsData = [
            {
                badge: "5 –∫–ª–∞—Å—Å",
                title: "–î—Ä–µ–≤–Ω–∏–π –º–∏—Ä",
                description: "–ö–æ–Ω—Å–ø–µ–∫—Ç—ã, –∫–∞—Ä—Ç—ã –∏ —Ç–µ—Å—Ç—ã –ø–æ –∏—Å—Ç–æ—Ä–∏–∏ –î—Ä–µ–≤–Ω–µ–≥–æ –ï–≥–∏–ø—Ç–∞, –ì—Ä–µ—Ü–∏–∏ –∏ –†–∏–º–∞.",
                buttonText: "–°–∫–∞—á–∞—Ç—å",
                path: "learning-materials/grade5-ancient-world.zip"
            },
            {
                badge: "6 –∫–ª–∞—Å—Å",
                title: "–°—Ä–µ–¥–Ω–∏–µ –≤–µ–∫–∞",
                description: "–¢–∞–±–ª–∏—Ü—ã —Ñ–µ–æ–¥–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã, –∫—Ä–µ—Å—Ç–æ–≤—ã–µ –ø–æ—Ö–æ–¥—ã, –í–æ–∑—Ä–æ–∂–¥–µ–Ω–∏–µ.",
                buttonText: "–°–∫–∞—á–∞—Ç—å",
                path: "learning-materials/grade6-middle-ages.zip"
            },
            {
                badge: "7 –∫–ª–∞—Å—Å",
                title: "–ù–æ–≤–æ–µ –≤—Ä–µ–º—è",
                description: "–í–µ–ª–∏–∫–∏–µ –≥–µ–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏–µ –æ—Ç–∫—Ä—ã—Ç–∏—è, —Ä–µ—Ñ–æ—Ä–º–∞—Ü–∏—è, –∞–±—Å–æ–ª—é—Ç–∏–∑–º.",
                buttonText: "–°–∫–∞—á–∞—Ç—å",
                path: "learning-materials/grade7-new-age.zip"
            }
        ];

        const learningMaterialsGrid = document.querySelector('.learning-materials__grid');
        if (learningMaterialsGrid) {
            learningMaterialsGrid.innerHTML = learningMaterialsData.map(material => `
                <article class="material-card">
                    <span class="material-card__badge">${material.badge}</span>
                    <h3 class="material-card__title">${material.title}</h3>
                    <p class="material-card__description">${material.description}</p>
                    <a href="${material.path}" download class="material-card__button button button_theme_primary">${material.buttonText}</a>
                </article>
            `).join('');
        }
    };

    // –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥–∞–ª–µ—Ä–µ–∏ –∏–∑ JSON
    const initGallery = async () => {
        try {
            const response = await fetch('images.json');
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            const galleryData = await response.json();
            renderGallery(galleryData);
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≥–∞–ª–µ—Ä–µ–∏
            saveToStorage(STORAGE_KEYS.GALLERY_LAST_VIEWED, new Date().toISOString());
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –≥–∞–ª–µ—Ä–µ–∏:', error);
            const galleryGrid = document.getElementById('galleryGrid');
            if (galleryGrid) {
                galleryGrid.innerHTML = '<p class="error-message">–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≥–∞–ª–µ—Ä–µ—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.</p>';
            }
        }
    };

    // –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ –≥–∞–ª–µ—Ä–µ–∏ —Å Swiper
    const renderGallery = (images) => {
        const galleryGrid = document.getElementById('galleryGrid');
        if (!galleryGrid || !Array.isArray(images)) return;

        // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π —Å–ª–∞–π–¥ –∏–∑ LocalStorage
        const lastViewedIndex = getFromStorage(STORAGE_KEYS.GALLERY_LAST_VIEWED_INDEX, 0);
        
        galleryGrid.innerHTML = images.map((image, index) => `
            <div class="swiper-slide">
                <img src="${image.src}" alt="${image.alt || ''}" class="gallery__image" loading="lazy">
                ${image.caption ? `<div class="gallery__caption">${image.caption}</div>` : ''}
            </div>
        `).join('');

        const swiper = new Swiper('.gallerySwiper', {
            loop: true,
            autoplay: {
                delay: 3000,
                disableOnInteraction: false,
            },
            pagination: {
                el: '.swiper-pagination',
                clickable: true,
            },
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
            effect: 'slide',
            speed: 800,
            grabCursor: true,
            initialSlide: lastViewedIndex,
            preloadImages: false,
            lazy: {
                loadPrevNext: true,
            }
        });

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π —Å–ª–∞–π–¥ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
        swiper.on('slideChange', () => {
            saveToStorage(STORAGE_KEYS.GALLERY_LAST_VIEWED_INDEX, swiper.realIndex);
        });
    };

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ–º—ã (—Ç–µ–º–Ω—ã–π/—Å–≤–µ—Ç–ª—ã–π —Ä–µ–∂–∏–º)
    const initTheme = () => {
        const darkMode = getFromStorage(STORAGE_KEYS.DARK_MODE, false);
        if (darkMode) {
            document.body.classList.add('dark-mode');
        }
        
        // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
    };

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    const init = () => {
        initPreloader();
        initTheme();
        initImageCaption();
        initNavigationMenu();
        initMainNavigation();
        initScrollButton();
        loadDynamicContent();
        initGallery();
    };

    init();
});
